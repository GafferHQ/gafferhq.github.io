import Gaffer
import GafferImage
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 54, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 1, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["Instancer"] = GafferScene.Instancer( "Instancer" )
parent.addChild( __children["Instancer"] )
__children["Instancer"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Parent"] = GafferScene.Parent( "Parent" )
parent.addChild( __children["Parent"] )
__children["Parent"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Seeds"] = GafferScene.Seeds( "Seeds" )
parent.addChild( __children["Seeds"] )
__children["Seeds"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Plane"] = GafferScene.Plane( "Plane" )
parent.addChild( __children["Plane"] )
__children["Plane"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter"] = GafferScene.PathFilter( "PathFilter" )
parent.addChild( __children["PathFilter"] )
__children["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Plane1"] = GafferScene.Plane( "Plane1" )
parent.addChild( __children["Plane1"] )
__children["Plane1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"] = GafferScene.Group( "Group" )
parent.addChild( __children["Group"] )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Plane2"] = GafferScene.Plane( "Plane2" )
parent.addChild( __children["Plane2"] )
__children["Plane2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter1"] = GafferScene.PathFilter( "PathFilter1" )
parent.addChild( __children["PathFilter1"] )
__children["PathFilter1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Sphere"] = GafferScene.Sphere( "Sphere" )
parent.addChild( __children["Sphere"] )
__children["Sphere"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"] = Gaffer.Backdrop( "Backdrop" )
parent.addChild( __children["Backdrop"] )
__children["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"] = Gaffer.Backdrop( "Backdrop1" )
parent.addChild( __children["Backdrop1"] )
__children["Backdrop1"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group1"] = GafferScene.Group( "Group1" )
parent.addChild( __children["Group1"] )
__children["Group1"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group1"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Sphere1"] = GafferScene.Sphere( "Sphere1" )
parent.addChild( __children["Sphere1"] )
__children["Sphere1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Sphere2"] = GafferScene.Sphere( "Sphere2" )
parent.addChild( __children["Sphere2"] )
__children["Sphere2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop2"] = Gaffer.Backdrop( "Backdrop2" )
parent.addChild( __children["Backdrop2"] )
__children["Backdrop2"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop2"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Sphere3"] = GafferScene.Sphere( "Sphere3" )
parent.addChild( __children["Sphere3"] )
__children["Sphere3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter2"] = GafferScene.PathFilter( "PathFilter2" )
parent.addChild( __children["PathFilter2"] )
__children["PathFilter2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"]["value"].setValue( 43680 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["Instancer"]["in"].setInput( __children["Seeds"]["out"] )
__children["Instancer"]["filter"].setInput( __children["PathFilter1"]["out"] )
__children["Instancer"]["__filteredPaths"].setInput( __children["Instancer"]["__filterResults"]["out"] )
__children["Instancer"]["instances"].setInput( __children["Sphere"]["out"] )
__children["Instancer"]["__uiPosition"].setValue( imath.V2f( -19.3330345, -14.9377632 ) )
__children["Parent"]["in"].setInput( __children["Group1"]["out"] )
__children["Parent"]["filter"].setInput( __children["PathFilter2"]["out"] )
__children["Parent"]["parent"].setValue( '/' )
__children["Parent"]["__filteredPaths"].setInput( __children["Parent"]["__filterResults"]["out"] )
__children["Parent"]["child"].setInput( __children["Sphere3"]["out"] )
__children["Parent"]["__uiPosition"].setValue( imath.V2f( -96.7423859, 14.5608768 ) )
__children["Seeds"]["in"].setInput( __children["Group"]["out"] )
__children["Seeds"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["Seeds"]["__filteredPaths"].setInput( __children["Seeds"]["__filterResults"]["out"] )
__children["Seeds"]["density"].setValue( 31.0 )
__children["Seeds"]["__uiPosition"].setValue( imath.V2f( -20.8330345, 16.9660988 ) )
__children["Plane"]["transform"]["translate"].setValue( imath.V3f( -2, 0, 0 ) )
__children["Plane"]["__uiPosition"].setValue( imath.V2f( -30.828867, 33.2946968 ) )
__children["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/group/plane', '/group/plane1' ] ) )
__children["PathFilter"]["__uiPosition"].setValue( imath.V2f( 20.1325741, 21.2183762 ) )
__children["Plane1"]["__uiPosition"].setValue( imath.V2f( -18.8271923, 33.2946968 ) )
__children["Group"]["in"]["in0"].setInput( __children["Plane"]["out"] )
__children["Group"]["in"]["in1"].setInput( __children["Plane1"]["out"] )
__children["Group"]["in"]["in2"].setInput( __children["Plane2"]["out"] )
__children["Group"]["__uiPosition"].setValue( imath.V2f( -20.8339882, 25.1306343 ) )
__children["Plane2"]["transform"]["translate"].setValue( imath.V3f( 2, 0, 0 ) )
__children["Plane2"]["__uiPosition"].setValue( imath.V2f( -6.87594318, 33.2946968 ) )
__children["PathFilter1"]["paths"].setValue( IECore.StringVectorData( [ '/group/plane/seeds', '/group/plane1/seeds' ] ) )
__children["PathFilter1"]["__uiPosition"].setValue( imath.V2f( 15.4667873, -10.9557428 ) )
__children["Sphere"]["radius"].setValue( 0.10000000149011612 )
__children["Sphere"]["__uiPosition"].setValue( imath.V2f( -11.533206, -6.77370262 ) )
__children["Backdrop"]["title"].setValue( 'Instancer node filter' )
__children["Backdrop"]["description"].setValue( 'Previously, the Instancer node did not have a filter plug, either. It now specifies which scene locations to use as target objects.' )
__children["Backdrop"]["__uiBound"].setValue( imath.Box2f( imath.V2f( 0, 0 ), imath.V2f( 40, 23.3835049 ) ) )
__children["Backdrop"]["__uiPosition"].setValue( imath.V2f( -4.49414635, -17.7419662 ) )
__children["Backdrop1"]["title"].setValue( 'Parent node filter' )
__children["Backdrop1"]["description"].setValue( 'In Gaffer 0.54, we added a path filter plug to the Parent node. With it, you can now parent the input scene to locations other than the root `/` . Alternatively, if you provide multiple filter paths, you can duplicate one location to multiple parents.' )
__children["Backdrop1"]["__uiBound"].setValue( imath.Box2f( imath.V2f( 0, 0 ), imath.V2f( 40, 23.3835049 ) ) )
__children["Backdrop1"]["__uiPosition"].setValue( imath.V2f( -84.3012238, 13.7700663 ) )
__children["Group1"]["in"]["in0"].setInput( __children["Sphere1"]["out"] )
__children["Group1"]["in"]["in1"].setInput( __children["Sphere2"]["out"] )
__children["Group1"]["__uiPosition"].setValue( imath.V2f( -106.57518, 22.7249489 ) )
__children["Sphere1"]["__uiPosition"].setValue( imath.V2f( -114.573395, 30.8890133 ) )
__children["Sphere2"]["__uiPosition"].setValue( imath.V2f( -101.57338, 30.8890133 ) )
__children["Backdrop2"]["title"].setValue( 'Seeds node filter' )
__children["Backdrop2"]["description"].setValue( 'The Seeds node has also received a filter plug, allowing you to selectively choose which parts of the scene to scatter points over.' )
__children["Backdrop2"]["__uiBound"].setValue( imath.Box2f( imath.V2f( 0, 0 ), imath.V2f( 40, 23.3835049 ) ) )
__children["Backdrop2"]["__uiPosition"].setValue( imath.V2f( 0.788408279, 13.9176502 ) )
__children["Sphere3"]["__uiPosition"].setValue( imath.V2f( -93.5751953, 22.7249393 ) )
__children["PathFilter2"]["paths"].setValue( IECore.StringVectorData( [ '/group' ] ) )
__children["PathFilter2"]["__uiPosition"].setValue( imath.V2f( -64.3479919, 18.539381 ) )


del __children

