import Gaffer
import GafferAppleseed
import GafferImage
import GafferOSL
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 53, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "imageCataloguePort", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"].addChild( Gaffer.StringPlug( "name", defaultValue = 'image:catalogue:port', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"].addChild( Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "projectName", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectName"].addChild( Gaffer.StringPlug( "name", defaultValue = 'project:name', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectName"].addChild( Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "projectRootDirectory", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectRootDirectory"].addChild( Gaffer.StringPlug( "name", defaultValue = 'project:rootDirectory', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectRootDirectory"].addChild( Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["Backdrop"] = Gaffer.Backdrop( "Backdrop" )
parent.addChild( __children["Backdrop"] )
__children["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound2", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop2"] = Gaffer.Backdrop( "Backdrop2" )
parent.addChild( __children["Backdrop2"] )
__children["Backdrop2"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop2"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop2"].addChild( Gaffer.Box2fPlug( "__uiBound2", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Objects"] = Gaffer.Box( "Objects" )
parent.addChild( __children["Objects"] )
__children["Objects"].addChild( GafferScene.Camera( "Camera" ) )
__children["Objects"]["Camera"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Objects"].addChild( GafferScene.Parent( "Parent" ) )
__children["Objects"]["Parent"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Objects"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Objects"].addChild( GafferScene.Sphere( "Sphere" ) )
__children["Objects"]["Sphere"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Objects"].addChild( GafferScene.Cube( "Cube" ) )
__children["Objects"]["Cube"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Objects"].addChild( GafferScene.Parent( "Parent1" ) )
__children["Objects"]["Parent1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Objects"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["Objects"]["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["Objects"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Objects"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Objects"].addChild( GafferScene.Group( "Group1" ) )
__children["Objects"]["Group1"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Objects"]["Group1"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Objects"]["Group1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Objects"].addChild( GafferScene.ShaderAssignment( "ShaderAssignment" ) )
__children["Objects"]["ShaderAssignment"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Objects"].addChild( GafferScene.PathFilter( "PathFilter" ) )
__children["Objects"]["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Objects"].addChild( GafferScene.Parent( "Parent2" ) )
__children["Objects"]["Parent2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Objects"].addChild( GafferAppleseed.AppleseedLight( "point_light" ) )
__children["Objects"]["point_light"].loadShader( "point_light" )
__children["Objects"]["point_light"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Objects"].addChild( GafferAppleseed.AppleseedLight( "point_light1" ) )
__children["Objects"]["point_light1"].loadShader( "point_light" )
__children["Objects"]["point_light1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Objects"].addChild( GafferOSL.OSLShader( "as_disney_material" ) )
__children["Objects"]["as_disney_material"].loadShader( "material/as_disney_material" )
__children["Objects"]["as_disney_material"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderTweaks"] = GafferScene.ShaderTweaks( "ShaderTweaks" )
parent.addChild( __children["ShaderTweaks"] )
__children["ShaderTweaks"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderTweaks1"] = GafferScene.ShaderTweaks( "ShaderTweaks1" )
parent.addChild( __children["ShaderTweaks1"] )
__children["ShaderTweaks1"]["tweaks"].addChild( GafferScene.TweakPlug( "tint", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderTweaks1"]["tweaks"]["tint"].addChild( Gaffer.Color3fPlug( "value", defaultValue = imath.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderTweaks1"]["tweaks"].addChild( GafferScene.TweakPlug( "intensity", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderTweaks1"]["tweaks"]["intensity"].addChild( Gaffer.Color3fPlug( "value", defaultValue = imath.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderTweaks1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter"] = GafferScene.PathFilter( "PathFilter" )
parent.addChild( __children["PathFilter"] )
__children["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderTweaks2"] = GafferScene.ShaderTweaks( "ShaderTweaks2" )
parent.addChild( __children["ShaderTweaks2"] )
__children["ShaderTweaks2"]["tweaks"].addChild( GafferScene.TweakPlug( "tint", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderTweaks2"]["tweaks"]["tint"].addChild( Gaffer.Color3fPlug( "value", defaultValue = imath.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderTweaks2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter1"] = GafferScene.PathFilter( "PathFilter1" )
parent.addChild( __children["PathFilter1"] )
__children["PathFilter1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderTweaks3"] = GafferScene.ShaderTweaks( "ShaderTweaks3" )
parent.addChild( __children["ShaderTweaks3"] )
__children["ShaderTweaks3"]["tweaks"].addChild( GafferScene.TweakPlug( "BaseColor", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderTweaks3"]["tweaks"]["BaseColor"].addChild( Gaffer.Color3fPlug( "value", defaultValue = imath.Color3f( 0.5, 0.5, 0.5 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderTweaks3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter2"] = GafferScene.PathFilter( "PathFilter2" )
parent.addChild( __children["PathFilter2"] )
__children["PathFilter2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InteractiveAppleseedRender"] = GafferAppleseed.InteractiveAppleseedRender( "InteractiveAppleseedRender" )
parent.addChild( __children["InteractiveAppleseedRender"] )
__children["InteractiveAppleseedRender"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Catalogue"] = GafferImage.Catalogue( "Catalogue" )
parent.addChild( __children["Catalogue"] )
__children["Catalogue"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["StandardOptions"] = GafferScene.StandardOptions( "StandardOptions" )
parent.addChild( __children["StandardOptions"] )
__children["StandardOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"] = GafferScene.Outputs( "Outputs" )
parent.addChild( __children["Outputs"] )
__children["Outputs"]["outputs"].addChild( Gaffer.ValuePlug( "output1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "quantize", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["quantize"].addChild( Gaffer.StringPlug( "name", defaultValue = 'quantize', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["quantize"].addChild( Gaffer.IntVectorDataPlug( "value", defaultValue = IECore.IntVectorData( [ 0, 0, 0, 0 ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "remoteDisplayType", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["remoteDisplayType"].addChild( Gaffer.StringPlug( "name", defaultValue = 'remoteDisplayType', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["remoteDisplayType"].addChild( Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "displayPort", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["displayPort"].addChild( Gaffer.StringPlug( "name", defaultValue = 'displayPort', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["displayPort"].addChild( Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "driverType", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["driverType"].addChild( Gaffer.StringPlug( "name", defaultValue = 'driverType', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["driverType"].addChild( Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "displayHost", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["displayHost"].addChild( Gaffer.StringPlug( "name", defaultValue = 'displayHost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["displayHost"].addChild( Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["frameRange"]["start"].setValue( 1001 )
parent["frameRange"]["end"].setValue( 1100 )
parent["variables"]["imageCataloguePort"]["value"].setValue( 51766 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["Backdrop"]["title"].setValue( 'ShaderTweaks demo' )
__children["Backdrop"]["description"].setValue( 'The ShaderTweaks nodes in this network modify:\n- The intensity (color) of the two point lights\n- The base color of the surface shader\n\nThe tweaks to the light target the "Appleseed Light" shader type. Since Appleseed ultimately uses OSL shaders, the tweak to the shader targets the  "OSL Surface" type.\n\nTo preview:\n\n1. Pin the Catalogue node to the Viewer.\n2. Start the IPR:\n    1. Select the InteractiveAppleseedRender node.\n    2. In the Node Editor, click the play button.\n3. Try adjusting the tweaks in real time, or disable their nodes (D) to see the differences.' )
__children["Backdrop"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -41.3871574, -61.6691208 ), imath.V2f( 3.99415302, 27.9136009 ) ) )
__children["Backdrop"]["__uiPosition"].setValue( imath.V2f( 11.0297384, 20.6367779 ) )
__children["Backdrop2"]["title"].setValue( 'ShaderTweaks' )
__children["Backdrop2"]["description"].setValue( "The ShaderTweaks node is new to Gaffer 0.53.0.0. It adds tweaks to both shaders and lights.\n\n\n\n\n\n\nEach tweak filters out a shader parameter, takes the parameter's value, and applies another value to it in a math operation.\n\nTo set up a tweak:\n\n1. Connect a filter that specifies one or more objects in the scene.\n\n2. In the Node Editor, specify which shader type in the filtered scene location(s) to modify:\n    - Select a type from the drop-down menu, OR\n    - Input a custom type name (select Custom, and a text field will appear).\n\n3. Select a shader parameter to tweak:\n    1. Click (+).\n    2. Select From Affected > parameter.\nA new tweak will appear with the chosen parameter name.\n \n4. From the tweak's drop-down menu, select the operation to apply to the parameter's value: Replace, Add, Subtract, or Multiply.\n\n5. In the right-most field, input a value to use in the other half of the operation." )
__children["Backdrop2"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -17.6226807, -78.9478912 ), imath.V2f( 18.9865761, 10.5810432 ) ) )
__children["Backdrop2"]["__uiPosition"].setValue( imath.V2f( -50.8424072, 37.9155426 ) )
__children["Objects"]["Camera"]["transform"]["translate"].setValue( imath.V3f( 0, 0, 5 ) )
__children["Objects"]["Camera"]["__uiPosition"].setValue( imath.V2f( -130.797058, 15.5489273 ) )
__children["Objects"]["Parent"]["in"].setInput( __children["Objects"]["Parent2"]["out"] )
__children["Objects"]["Parent"]["parent"].setValue( '/' )
__children["Objects"]["Parent"]["child"].setInput( __children["Objects"]["Camera"]["out"] )
__children["Objects"]["Parent"]["__uiPosition"].setValue( imath.V2f( -143.797058, 7.38484001 ) )
__children["Objects"]["out"].setInput( __children["Objects"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["Objects"]["out"], 'nodule:color', imath.Color3f( 0.239999995, 0.340000004, 0.49000001 ) )
Gaffer.Metadata.registerValue( __children["Objects"]["out"], 'connectionGadget:color', imath.Color3f( 0.119999997, 0.150000006, 0.349999994 ) )
Gaffer.Metadata.registerValue( __children["Objects"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Objects"]["out"], 'description', 'The processed output scene.' )
__children["Objects"]["Sphere"]["transform"]["translate"].setValue( imath.V3f( -1, 0, 0 ) )
__children["Objects"]["Sphere"]["radius"].setValue( 0.75 )
__children["Objects"]["Sphere"]["__uiPosition"].setValue( imath.V2f( -165.134293, 42.2187881 ) )
__children["Objects"]["Cube"]["transform"]["translate"].setValue( imath.V3f( 1, 0, 0 ) )
__children["Objects"]["Cube"]["transform"]["rotate"].setValue( imath.V3f( 45, 45, 45 ) )
__children["Objects"]["Cube"]["__uiPosition"].setValue( imath.V2f( -152.134293, 42.2187881 ) )
__children["Objects"]["Parent1"]["in"].setInput( __children["Objects"]["Sphere"]["out"] )
__children["Objects"]["Parent1"]["parent"].setValue( '/' )
__children["Objects"]["Parent1"]["child"].setInput( __children["Objects"]["Cube"]["out"] )
__children["Objects"]["Parent1"]["__uiPosition"].setValue( imath.V2f( -158.636276, 34.0546913 ) )
__children["Objects"]["BoxOut"]["in"].setInput( __children["Objects"]["Parent"]["out"] )
Gaffer.Metadata.registerValue( __children["Objects"]["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.239999995, 0.340000004, 0.49000001 ) )
Gaffer.Metadata.registerValue( __children["Objects"]["BoxOut"]["__out"], 'connectionGadget:color', imath.Color3f( 0.119999997, 0.150000006, 0.349999994 ) )
Gaffer.Metadata.registerValue( __children["Objects"]["BoxOut"]["__out"], 'labelPlugValueWidget:renameable', True )
Gaffer.Metadata.registerValue( __children["Objects"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Objects"]["BoxOut"]["__out"], 'description', 'The processed output scene.' )
__children["Objects"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( -142.296341, -0.947191238 ) )
__children["Objects"]["__uiPosition"].setValue( imath.V2f( -8.35168552, 12.498827 ) )
__children["Objects"]["Group1"]["in"]["in0"].setInput( __children["Objects"]["point_light"]["out"] )
__children["Objects"]["Group1"]["in"]["in1"].setInput( __children["Objects"]["point_light1"]["out"] )
__children["Objects"]["Group1"]["name"].setValue( 'lights' )
__children["Objects"]["Group1"]["__uiPosition"].setValue( imath.V2f( -124.943764, 24.8019123 ) )
__children["Objects"]["ShaderAssignment"]["in"].setInput( __children["Objects"]["Parent1"]["out"] )
__children["Objects"]["ShaderAssignment"]["filter"].setInput( __children["Objects"]["PathFilter"]["out"] )
__children["Objects"]["ShaderAssignment"]["shader"].setInput( __children["Objects"]["as_disney_material"]["out"] )
__children["Objects"]["ShaderAssignment"]["__uiPosition"].setValue( imath.V2f( -158.636276, 25.8906288 ) )
__children["Objects"]["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/cube', '/sphere' ] ) )
__children["Objects"]["PathFilter"]["__uiPosition"].setValue( imath.V2f( -145.037537, 31.0235901 ) )
__children["Objects"]["Parent2"]["in"].setInput( __children["Objects"]["ShaderAssignment"]["out"] )
__children["Objects"]["Parent2"]["parent"].setValue( '/' )
__children["Objects"]["Parent2"]["child"].setInput( __children["Objects"]["Group1"]["out"] )
__children["Objects"]["Parent2"]["__uiPosition"].setValue( imath.V2f( -151.217072, 16.6378498 ) )
__children["Objects"]["point_light"]["transform"]["translate"].setValue( imath.V3f( -5, 0, 5 ) )
__children["Objects"]["point_light"]["parameters"]["exposure"].setValue( 8.0 )
__children["Objects"]["point_light"]["__uiPosition"].setValue( imath.V2f( -127.943764, 32.9659729 ) )
__children["Objects"]["point_light1"]["transform"]["translate"].setValue( imath.V3f( 5, 0, 5 ) )
__children["Objects"]["point_light1"]["parameters"]["exposure"].setValue( 8.0 )
__children["Objects"]["point_light1"]["__uiPosition"].setValue( imath.V2f( -115.943771, 32.9659767 ) )
__children["Objects"]["as_disney_material"]["__uiPosition"].setValue( imath.V2f( -176.191208, 25.8906288 ) )
__children["ShaderTweaks"]["__uiPosition"].setValue( imath.V2f( -49.9356117, 33.4257393 ) )
__children["ShaderTweaks1"]["in"].setInput( __children["Objects"]["out"] )
__children["ShaderTweaks1"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["ShaderTweaks1"]["shader"].setValue( 'as:light' )
__children["ShaderTweaks1"]["tweaks"]["tint"]["mode"].setValue( 2 )
__children["ShaderTweaks1"]["tweaks"]["tint"]["value"].setValue( imath.Color3f( 0, 1, 0 ) )
__children["ShaderTweaks1"]["tweaks"]["intensity"]["name"].setValue( 'intensity' )
__children["ShaderTweaks1"]["tweaks"]["intensity"]["mode"].setValue( 2 )
__children["ShaderTweaks1"]["tweaks"]["intensity"]["value"].setValue( imath.Color3f( 0, 1, 0 ) )
__children["ShaderTweaks1"]["__uiPosition"].setValue( imath.V2f( -9.85168552, 4.16679764 ) )
__children["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/lights/light' ] ) )
__children["PathFilter"]["__uiPosition"].setValue( imath.V2f( 4.53191376, 8.52216721 ) )
__children["ShaderTweaks2"]["in"].setInput( __children["ShaderTweaks1"]["out"] )
__children["ShaderTweaks2"]["filter"].setInput( __children["PathFilter1"]["out"] )
__children["ShaderTweaks2"]["shader"].setValue( 'as:light' )
__children["ShaderTweaks2"]["tweaks"]["tint"]["name"].setValue( 'intensity' )
__children["ShaderTweaks2"]["tweaks"]["tint"]["mode"].setValue( 3 )
__children["ShaderTweaks2"]["tweaks"]["tint"]["value"].setValue( imath.Color3f( 0, 1.5, 0 ) )
__children["ShaderTweaks2"]["__uiPosition"].setValue( imath.V2f( -9.85168552, -3.99726534 ) )
__children["PathFilter1"]["paths"].setValue( IECore.StringVectorData( [ '/lights/light1' ] ) )
__children["PathFilter1"]["__uiPosition"].setValue( imath.V2f( 4.73165894, 0.113810539 ) )
__children["ShaderTweaks3"]["in"].setInput( __children["ShaderTweaks2"]["out"] )
__children["ShaderTweaks3"]["filter"].setInput( __children["PathFilter2"]["out"] )
__children["ShaderTweaks3"]["shader"].setValue( 'osl:surface' )
__children["ShaderTweaks3"]["tweaks"]["BaseColor"]["name"].setValue( 'BaseColor' )
__children["ShaderTweaks3"]["tweaks"]["BaseColor"]["value"].setValue( imath.Color3f( 0.930000007, 0.0149999997, 0.283699989 ) )
__children["ShaderTweaks3"]["__uiPosition"].setValue( imath.V2f( -9.85168552, -12.1613283 ) )
__children["PathFilter2"]["paths"].setValue( IECore.StringVectorData( [ '/cube' ] ) )
__children["PathFilter2"]["__uiPosition"].setValue( imath.V2f( 4.42990494, -8.05145645 ) )
__children["InteractiveAppleseedRender"]["in"].setInput( __children["Outputs"]["out"] )
__children["InteractiveAppleseedRender"]["__uiPosition"].setValue( imath.V2f( -9.85084629, -31.6535187 ) )
__children["Catalogue"]["directory"].setValue( '${project:rootDirectory}/catalogues/${script:name}' )
__children["Catalogue"]["__uiPosition"].setValue( imath.V2f( 6.41197586, -31.6268845 ) )
__children["StandardOptions"]["in"].setInput( __children["ShaderTweaks3"]["out"] )
__children["StandardOptions"]["options"]["renderCamera"]["value"].setValue( '/camera' )
__children["StandardOptions"]["options"]["renderCamera"]["enabled"].setValue( True )
__children["StandardOptions"]["__uiPosition"].setValue( imath.V2f( -9.85084629, -20.325388 ) )
__children["Outputs"]["in"].setInput( __children["StandardOptions"]["out"] )
__children["Outputs"]["outputs"]["output1"]["name"].setValue( 'Interactive/Beauty' )
__children["Outputs"]["outputs"]["output1"]["fileName"].setValue( 'beauty' )
__children["Outputs"]["outputs"]["output1"]["type"].setValue( 'ieDisplay' )
__children["Outputs"]["outputs"]["output1"]["data"].setValue( 'rgba' )
__children["Outputs"]["__uiPosition"].setValue( imath.V2f( -9.85084629, -25.9894505 ) )


del __children

