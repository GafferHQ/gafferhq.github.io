import Gaffer
import GafferImage
import GafferOSL
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 54, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 1, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["Cube"] = GafferScene.Cube( "Cube" )
parent.addChild( __children["Cube"] )
__children["Cube"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Cube1"] = GafferScene.Cube( "Cube1" )
parent.addChild( __children["Cube1"] )
__children["Cube1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"] = GafferScene.Group( "Group" )
parent.addChild( __children["Group"] )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Instancer"] = GafferScene.Instancer( "Instancer" )
parent.addChild( __children["Instancer"] )
__children["Instancer"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter"] = GafferScene.PathFilter( "PathFilter" )
parent.addChild( __children["PathFilter"] )
__children["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Orientation"] = GafferScene.Orientation( "Orientation" )
parent.addChild( __children["Orientation"] )
__children["Orientation"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Sphere"] = GafferScene.Sphere( "Sphere" )
parent.addChild( __children["Sphere"] )
__children["Sphere"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLObject"] = GafferOSL.OSLObject( "OSLObject" )
parent.addChild( __children["OSLObject"] )
__children["OSLObject"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "customVector", Gaffer.V3fPlug( "value", defaultValue = imath.V3f( 0, 0, 0 ), interpretation = IECore.GeometricData.Interpretation.Vector ), True, "primitiveVariable", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLObject"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"] = Gaffer.Backdrop( "Backdrop" )
parent.addChild( __children["Backdrop"] )
__children["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"] = Gaffer.Backdrop( "Backdrop1" )
parent.addChild( __children["Backdrop1"] )
__children["Backdrop1"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop2"] = Gaffer.Backdrop( "Backdrop2" )
parent.addChild( __children["Backdrop2"] )
__children["Backdrop2"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop2"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop3"] = Gaffer.Backdrop( "Backdrop3" )
parent.addChild( __children["Backdrop3"] )
__children["Backdrop3"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop3"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop5"] = Gaffer.Backdrop( "Backdrop5" )
parent.addChild( __children["Backdrop5"] )
__children["Backdrop5"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop5"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop5"].addChild( Gaffer.Box2fPlug( "__uiBound2", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop5"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop6"] = Gaffer.Backdrop( "Backdrop6" )
parent.addChild( __children["Backdrop6"] )
__children["Backdrop6"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop6"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop6"].addChild( Gaffer.Box2fPlug( "__uiBound2", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop6"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop7"] = Gaffer.Backdrop( "Backdrop7" )
parent.addChild( __children["Backdrop7"] )
__children["Backdrop7"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop7"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop7"].addChild( Gaffer.Box2fPlug( "__uiBound2", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop7"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"]["value"].setValue( 34049 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["Cube"]["dimensions"].setValue( imath.V3f( 0.99000001, 0.430000007, 1 ) )
__children["Cube"]["__uiPosition"].setValue( imath.V2f( -24.066164, 10.5768356 ) )
__children["Cube1"]["transform"]["translate"].setValue( imath.V3f( 0, 0, -0.25 ) )
__children["Cube1"]["dimensions"].setValue( imath.V3f( 0.5, 1.64999998, 0.5 ) )
__children["Cube1"]["__uiPosition"].setValue( imath.V2f( -12.8083496, 10.5768356 ) )
__children["Group"]["in"]["in0"].setInput( __children["Cube"]["out"] )
__children["Group"]["in"]["in1"].setInput( __children["Cube1"]["out"] )
__children["Group"]["transform"]["scale"]["x"].setValue( 0.5 )
__children["Group"]["transform"]["scale"]["y"].setInput( __children["Group"]["transform"]["scale"]["x"] )
__children["Group"]["transform"]["scale"]["z"].setInput( __children["Group"]["transform"]["scale"]["x"] )
__children["Group"]["__uiPosition"].setValue( imath.V2f( -21.066164, 2.41276836 ) )
__children["Instancer"]["in"].setInput( __children["Orientation"]["out"] )
__children["Instancer"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["Instancer"]["__filteredPaths"].setInput( __children["Instancer"]["__filterResults"]["out"] )
__children["Instancer"]["instances"].setInput( __children["Group"]["out"] )
__children["Instancer"]["orientation"].setValue( 'orientation' )
__children["Instancer"]["__uiPosition"].setValue( imath.V2f( -55.552002, -5.75129414 ) )
__children["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/sphere' ] ) )
__children["PathFilter"]["__uiPosition"].setValue( imath.V2f( -43.0938492, 53.192646 ) )
__children["Orientation"]["in"].setInput( __children["OSLObject"]["out"] )
__children["Orientation"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["Orientation"]["inMode"].setValue( 3 )
__children["Orientation"]["inYAxis"].setValue( 'N' )
__children["Orientation"]["inZAxis"].setValue( 'Up' )
__children["Orientation"]["randomEnabled"].setValue( True )
__children["Orientation"]["randomTwist"].setValue( 45.0 )
__children["Orientation"]["__uiPosition"].setValue( imath.V2f( -57.052002, 23.344944 ) )
__children["Sphere"]["radius"].setValue( 5.0 )
__children["Sphere"]["divisions"].setValue( imath.V2i( 15, 15 ) )
__children["Sphere"]["__uiPosition"].setValue( imath.V2f( -57.052002, 67.0274506 ) )
__children["OSLObject"]["in"].setInput( __children["Sphere"]["out"] )
__children["OSLObject"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["OSLObject"]["__contextCompatibility"].setValue( False )
__children["OSLObject"]["primitiveVariables"]["primitiveVariable"]["name"].setValue( 'Up' )
__children["OSLObject"]["primitiveVariables"]["primitiveVariable"]["value"].setValue( imath.V3f( 0, 0, 1 ) )
__children["OSLObject"]["__uiPosition"].setValue( imath.V2f( -57.052002, 48.7960091 ) )
__children["Backdrop"]["title"].setValue( 'Example: Orientation node' )
__children["Backdrop"]["description"].setValue( "In this graph, you can see how the Orientation node can be used to efficiently adjust the orientations of primvars on a mesh.\n\nHere we instance a group of cubes onto the surface of a sphere, and then create an orientation based on the sphere's N primvar. At the same time, we randomize that orientation." )
__children["Backdrop"]["__uiBound"].setValue( imath.Box2f( imath.V2f( 0, 0 ), imath.V2f( 40, 20 ) ) )
__children["Backdrop"]["__uiPosition"].setValue( imath.V2f( -108.880142, 62.5425186 ) )
__children["Backdrop1"]["title"].setValue( '' )
__children["Backdrop1"]["__uiBound"].setValue( imath.Box2f( imath.V2f( 0, -0.201667786 ), imath.V2f( 73.7517853, 23.0090408 ) ) )
__children["Backdrop1"]["__uiPosition"].setValue( imath.V2f( -108.846451, 36.9454689 ) )
__children["Backdrop2"]["title"].setValue( '' )
__children["Backdrop2"]["__uiBound"].setValue( imath.Box2f( imath.V2f( 0, -1.08594036 ), imath.V2f( 73.9272842, 22.6502895 ) ) )
__children["Backdrop2"]["__uiPosition"].setValue( imath.V2f( -109.146576, 12.4176464 ) )
Gaffer.Metadata.registerValue( __children["Backdrop3"], 'nodeGadget:color', imath.Color3f( 0.347949386, 0.438627928, 0.5 ) )
__children["Backdrop3"]["title"].setValue( '' )
__children["Backdrop3"]["__uiBound"].setValue( imath.Box2f( imath.V2f( 0, -2.38992405 ), imath.V2f( 73.9386597, 24.0322762 ) ) )
__children["Backdrop3"]["__uiPosition"].setValue( imath.V2f( -109.157951, -14.5476141 ) )
__children["Backdrop5"]["title"].setValue( 'Adding an up direction' )
__children["Backdrop5"]["description"].setValue( 'We add a custom per-vertex primvar, called Up, to the target object, giving its mesh an up direction that we can work with.' )
__children["Backdrop5"]["__uiBound"].setValue( imath.Box2f( imath.V2f( 0, 0 ), imath.V2f( 40, 20 ) ) )
__children["Backdrop5"]["__uiPosition"].setValue( imath.V2f( -108.693008, 38.5655594 ) )
__children["Backdrop6"]["title"].setValue( 'Random orientation' )
__children["Backdrop6"]["description"].setValue( "Here the Orientation node uses the N and Up primvars as axes, and then adds some randomness to the resulting orientation.\n\nThe Orientation node has three sections: Input, which defines the source orientation; Random, which optionally randomizes the orientation; and Output, which determines the orientation's final representation (and, if necessary, name)." )
__children["Backdrop6"]["__uiBound"].setValue( imath.Box2f( imath.V2f( 0, 0 ), imath.V2f( 40, 20.9099026 ) ) )
__children["Backdrop6"]["__uiPosition"].setValue( imath.V2f( -109.116592, 12.7253113 ) )
Gaffer.Metadata.registerValue( __children["Backdrop7"], 'nodeGadget:color', imath.Color3f( 0.347949386, 0.438627928, 0.5 ) )
__children["Backdrop7"]["title"].setValue( 'Note: Instancer node and quaternions' )
__children["Backdrop7"]["description"].setValue( "For efficiency reasons, the Instancer node processes orientations as quaternions. Therefore, in order to use the target surface's new orientations, we output the Orientation node's orientations as quaternions.\n\nWhen using the Orientation node with other nodes, other representations (Euler, aim, matrix) are possible." )
__children["Backdrop7"]["__uiBound"].setValue( imath.Box2f( imath.V2f( 0, 0 ), imath.V2f( 40, 21.6637878 ) ) )
__children["Backdrop7"]["__uiPosition"].setValue( imath.V2f( -105.49781, -13.9890862 ) )


del __children

