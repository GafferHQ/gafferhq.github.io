import Gaffer
import GafferImage
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 53, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "imageCataloguePort", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"].addChild( Gaffer.StringPlug( "name", defaultValue = 'image:catalogue:port', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"].addChild( Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "projectName", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectName"].addChild( Gaffer.StringPlug( "name", defaultValue = 'project:name', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectName"].addChild( Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "projectRootDirectory", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectRootDirectory"].addChild( Gaffer.StringPlug( "name", defaultValue = 'project:rootDirectory', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectRootDirectory"].addChild( Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["Sphere"] = GafferScene.Sphere( "Sphere" )
parent.addChild( __children["Sphere"] )
__children["Sphere"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Animation"] = Gaffer.Animation( "Animation" )
parent.addChild( __children["Animation"] )
__children["Animation"]["curves"].addChild( Gaffer.Animation.CurvePlug( "curve0", flags = ( Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) & ~Gaffer.Plug.Flags.AcceptsInputs, ) )
__children["Animation"]["curves"]["curve0"].addKey( Gaffer.Animation.Key( 41.708332, 1.000000, Gaffer.Animation.Type.Linear ) )
__children["Animation"]["curves"]["curve0"].addKey( Gaffer.Animation.Key( 43.750000, 12.878796, Gaffer.Animation.Type.Linear ) )
__children["Animation"]["curves"]["curve0"].addKey( Gaffer.Animation.Key( 45.833332, 1.000000, Gaffer.Animation.Type.Linear ) )
__children["Animation"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Plane"] = GafferScene.Plane( "Plane" )
parent.addChild( __children["Plane"] )
__children["Plane"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Merge"] = GafferImage.Merge( "Merge" )
parent.addChild( __children["Merge"] )
__children["Merge"]["in"].addChild( GafferImage.ImagePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Merge"]["in"].addChild( GafferImage.ImagePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Merge"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Constant"] = GafferImage.Constant( "Constant" )
parent.addChild( __children["Constant"] )
__children["Constant"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ImageReader"] = GafferImage.ImageReader( "ImageReader" )
parent.addChild( __children["ImageReader"] )
__children["ImageReader"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Transform"] = GafferScene.Transform( "Transform" )
parent.addChild( __children["Transform"] )
__children["Transform"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter"] = GafferScene.PathFilter( "PathFilter" )
parent.addChild( __children["PathFilter"] )
__children["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Offset"] = GafferImage.Offset( "Offset" )
parent.addChild( __children["Offset"] )
__children["Offset"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Animation1"] = Gaffer.Animation( "Animation1" )
parent.addChild( __children["Animation1"] )
__children["Animation1"]["curves"].addChild( Gaffer.Animation.CurvePlug( "curve0", flags = ( Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) & ~Gaffer.Plug.Flags.AcceptsInputs, ) )
__children["Animation1"]["curves"]["curve0"].addKey( Gaffer.Animation.Key( 41.708332, 0.000000, Gaffer.Animation.Type.Linear ) )
__children["Animation1"]["curves"]["curve0"].addKey( Gaffer.Animation.Key( 45.833332, 1600.000000, Gaffer.Animation.Type.Linear ) )
__children["Animation1"]["curves"].addChild( Gaffer.Animation.CurvePlug( "curve1", flags = ( Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) & ~Gaffer.Plug.Flags.AcceptsInputs, ) )
__children["Animation1"]["curves"]["curve1"].addKey( Gaffer.Animation.Key( 41.708332, 0.000000, Gaffer.Animation.Type.Linear ) )
__children["Animation1"]["curves"]["curve1"].addKey( Gaffer.Animation.Key( 45.833332, 900.000000, Gaffer.Animation.Type.Linear ) )
__children["Animation1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shuffle"] = GafferImage.Shuffle( "Shuffle" )
parent.addChild( __children["Shuffle"] )
__children["Shuffle"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shuffle"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shuffle"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shuffle"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shuffle"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"] = Gaffer.Backdrop( "Backdrop" )
parent.addChild( __children["Backdrop"] )
__children["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"] = Gaffer.Backdrop( "Backdrop1" )
parent.addChild( __children["Backdrop1"] )
__children["Backdrop1"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TimeWarp"] = Gaffer.TimeWarp( "TimeWarp" )
parent.addChild( __children["TimeWarp"] )
__children["TimeWarp"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop2"] = Gaffer.Backdrop( "Backdrop2" )
parent.addChild( __children["Backdrop2"] )
__children["Backdrop2"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Parent"] = GafferScene.Parent( "Parent" )
parent.addChild( __children["Parent"] )
__children["Parent"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Parent1"] = GafferScene.Parent( "Parent1" )
parent.addChild( __children["Parent1"] )
__children["Parent1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot"] = Gaffer.Dot( "Dot" )
parent.addChild( __children["Dot"] )
__children["Dot"].setup( GafferImage.ImagePlug( "in", ) )
__children["Dot"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TimeWarp3"] = Gaffer.TimeWarp( "TimeWarp3" )
parent.addChild( __children["TimeWarp3"] )
__children["TimeWarp3"].setup( GafferImage.ImagePlug( "in", ) )
__children["TimeWarp3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot1"] = Gaffer.Dot( "Dot1" )
parent.addChild( __children["Dot1"] )
__children["Dot1"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TimeWarp2"] = Gaffer.TimeWarp( "TimeWarp2" )
parent.addChild( __children["TimeWarp2"] )
__children["TimeWarp2"].setup( GafferScene.ScenePlug( "in", ) )
__children["TimeWarp2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["frameRange"]["start"].setValue( 1001 )
parent["frameRange"]["end"].setValue( 1100 )
parent["frame"].setValue( 1001.0 )
parent["variables"]["imageCataloguePort"]["value"].setValue( 33418 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["Sphere"]["transform"]["translate"]["z"].setValue( 4.0 )
__children["Sphere"]["transform"]["translate"]["y"].setInput( __children["Animation"]["curves"]["curve0"]["out"] )
__children["Sphere"]["__uiPosition"].setValue( imath.V2f( 0.739113808, 27.4791203 ) )
__children["Animation"]["__uiPosition"].setValue( imath.V2f( 8.87222481, 27.4782543 ) )
__children["Plane"]["transform"]["rotate"].setValue( imath.V3f( 90, 0, 0 ) )
__children["Plane"]["transform"]["scale"].setValue( imath.V3f( 10, 10, 1 ) )
__children["Plane"]["__uiPosition"].setValue( imath.V2f( -17.4404392, 27.5485535 ) )
__children["Merge"]["in"]["in0"].setInput( __children["Constant"]["out"] )
__children["Merge"]["in"]["in1"].setInput( __children["Dot"]["out"] )
__children["Merge"]["in"]["in2"].setInput( __children["Shuffle"]["out"] )
__children["Merge"]["operation"].setValue( 8 )
__children["Merge"]["__uiPosition"].setValue( imath.V2f( 38.0462532, -5.78992987 ) )
__children["Constant"]["color"].setValue( imath.Color4f( 0.0500000007, 0.0500000007, 0.0500000007, 1 ) )
__children["Constant"]["__uiPosition"].setValue( imath.V2f( 33.5462532, 27.0485916 ) )
__children["ImageReader"]["fileName"].setValue( '${GAFFER_ROOT}/graphics/GafferLogoMini.png' )
__children["ImageReader"]["__uiPosition"].setValue( imath.V2f( 53.6685829, 26.8663235 ) )
__children["Transform"]["in"].setInput( __children["TimeWarp2"]["out"] )
__children["Transform"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["Transform"]["transform"]["translate"].setValue( imath.V3f( 0, 0, -8 ) )
__children["Transform"]["__uiPosition"].setValue( imath.V2f( 0.7391119, 11.1509905 ) )
__children["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/sphere' ] ) )
__children["PathFilter"]["__uiPosition"].setValue( imath.V2f( 12.4745636, 15.1032619 ) )
__children["Offset"]["in"].setInput( __children["ImageReader"]["out"] )
__children["Offset"]["offset"]["x"].setInput( __children["Animation1"]["curves"]["curve0"]["out"] )
__children["Offset"]["offset"]["y"].setInput( __children["Animation1"]["curves"]["curve1"]["out"] )
__children["Offset"]["__uiPosition"].setValue( imath.V2f( 53.6685829, 18.7022572 ) )
__children["Animation1"]["__uiPosition"].setValue( imath.V2f( 61.9462585, 18.7014179 ) )
__children["Shuffle"]["in"].setInput( __children["TimeWarp3"]["out"] )
__children["Shuffle"]["channels"]["channel"]["out"].setValue( 'R' )
__children["Shuffle"]["channels"]["channel"]["in"].setValue( 'G' )
__children["Shuffle"]["channels"]["channel1"]["out"].setValue( 'G' )
__children["Shuffle"]["channels"]["channel1"]["in"].setValue( 'B' )
__children["Shuffle"]["channels"]["channel2"]["out"].setValue( 'B' )
__children["Shuffle"]["channels"]["channel2"]["in"].setValue( 'R' )
__children["Shuffle"]["channels"]["channel3"]["out"].setValue( 'A' )
__children["Shuffle"]["channels"]["channel3"]["in"].setValue( 'A' )
__children["Shuffle"]["__uiPosition"].setValue( imath.V2f( 53.7312546, 2.37413263 ) )
__children["Backdrop"]["title"].setValue( 'TimeWarp in a scene' )
__children["Backdrop"]["description"].setValue( 'Select the Parent1 node and scrub the timeline.' )
__children["Backdrop"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -46.5216217, -24.4202042 ), imath.V2f( 1.21535492, 27.9136009 ) ) )
__children["Backdrop"]["__uiPosition"].setValue( imath.V2f( 20.4466896, 13.5936317 ) )
__children["Backdrop1"]["title"].setValue( 'TimeWarp in an image' )
__children["Backdrop1"]["description"].setValue( 'Select the Merge node and scrub the timeline.' )
__children["Backdrop1"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -20.4500027, -23.9537296 ), imath.V2f( 26.4500027, 28.2710915 ) ) )
__children["Backdrop1"]["__uiPosition"].setValue( imath.V2f( 43.648262, 13.1813231 ) )
__children["TimeWarp"]["__uiPosition"].setValue( imath.V2f( -41.5985336, 25.6382694 ) )
__children["Backdrop2"]["title"].setValue( 'Plain Timewarp' )
__children["Backdrop2"]["description"].setValue( 'Will accept any scene or image connection.' )
__children["Backdrop2"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -8.5, -41.7185211 ), imath.V2f( 18.9865761, 10.5810432 ) ) )
__children["Backdrop2"]["__uiPosition"].setValue( imath.V2f( -46.5471191, 30.9781761 ) )
__children["Parent"]["in"].setInput( __children["Dot1"]["out"] )
__children["Parent"]["parent"].setValue( '/' )
__children["Parent"]["child"].setInput( __children["Transform"]["out"] )
__children["Parent"]["__uiPosition"].setValue( imath.V2f( -9.94043922, 2.98692799 ) )
__children["Parent1"]["in"].setInput( __children["Plane"]["out"] )
__children["Parent1"]["parent"].setValue( '/' )
__children["Parent1"]["child"].setInput( __children["Parent"]["out"] )
__children["Parent1"]["__uiPosition"].setValue( imath.V2f( -15.9404392, -5.17713451 ) )
__children["Dot"]["in"].setInput( __children["Offset"]["out"] )
__children["Dot"]["__uiPosition"].setValue( imath.V2f( 36.5462532, 11.3702259 ) )
__children["TimeWarp3"]["offset"].setValue( 20.0 )
__children["TimeWarp3"]["in"].setInput( __children["Offset"]["out"] )
Gaffer.Metadata.registerValue( __children["TimeWarp3"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["TimeWarp3"]["out"], 'noduleLayout:section', 'bottom' )
__children["TimeWarp3"]["__uiPosition"].setValue( imath.V2f( 53.6685829, 10.5381947 ) )
__children["Dot1"]["in"].setInput( __children["Sphere"]["out"] )
__children["Dot1"]["__uiPosition"].setValue( imath.V2f( -11.4404392, 20.147089 ) )
__children["TimeWarp2"]["offset"].setValue( 10.0 )
__children["TimeWarp2"]["in"].setInput( __children["Sphere"]["out"] )
__children["TimeWarp2"]["__uiPosition"].setValue( imath.V2f( 0.739113808, 19.3150578 ) )


del __children

